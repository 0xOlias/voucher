// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/MinimalRouterProxy.sol";

contract MinimalRouterProxyTest is Test {
    MinimalRouterProxy private routerProxy;

    address public constant alice = address(1);
    address public constant bob = address(2);
    address public constant charlie = address(3);

    address public constant reservoirRouter =
        0x8005488FF4f8982D2D8c1D602e6d747b1428dd41;

    address public constant tokenAddress =
        0x8d04a8c79cEB0889Bdd12acdF3Fa9D207eD3Ff63; // Blitmap
    uint256 public constant tokenId = 613; // "Say What Edition" on sale for 15 ETH
    uint256 public constant fillPrice = 15000000000000000000; // 15 ETH
    bytes public constant reservoirRouterData =
        hex"9a3adc080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008d04a8c79ceb0889bdd12acdf3fa9d207ed3ff630000000000000000000000000000000000000000000000000000000000000265000000000000000000000000000000000000000000000000000000000000000200000000000000000000000074dacd80d9b67912cb957966465ccc81e62ccc4f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b64ab834bab0000000000000000000000007f268357a8c2552623316e2562d90e642bb538e50000000000000000000000008005488ff4f8982d2d8c1d602e6d747b1428dd4100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f268357a8c2552623316e2562d90e642bb538e500000000000000000000000074dacd80d9b67912cb957966465ccc81e62ccc4f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000005b3256965e7c3cf26e11fcaf296dfc8807c01073000000000000000000000000baf2127b49fc93cbca6269fade0f7f31df4c88a70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d02ab486cedc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062ce356000000000000000000000000000000000000000000000000000000000000000001436a1e8394998552bff671d1b9e76a0698c33ef5defbbefd39e5c67a7cac8b400000000000000000000000000000000000000000000000000000000000000fa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d02ab486cedc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000062a744ed0000000000000000000000000000000000000000000000000000000062ced0e6dc4dc7bd1e73ce94029358f7f0417893ee65201bdb8753dcca8ede65b1c6dd3ba000000000000000000000000000000000000000000000000000000000000007c000000000000000000000000000000000000000000000000000000000000008e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000b200000000000000000000000000000000000000000000000000000000000000b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f6c0772b091fe2f7b7f240a35d02bc1365180c3beb1678bde482c532af5bf7113e05af944d0993fc32a06e18ea8ebb2ca4c1240c4a915b52c692bd4c8e5077d8000000000000000000000000000000000000000000000000000000000000000f00000000000000000000000000000000000000000000000000000000000000e4fb16a595000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000008d04a8c79ceb0889bdd12acdf3fa9d207ed3ff630000000000000000000000000000000000000000000000000000000000000265000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4fb16a59500000000000000000000000074dacd80d9b67912cb957966465ccc81e62ccc4f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000008d04a8c79ceb0889bdd12acdf3fa9d207ed3ff630000000000000000000000000000000000000000000000000000000000000265000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e400000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe4000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff

    function setUp() public {
        routerProxy = new MinimalRouterProxy();
        console.log("MinimalRouterProxy", address(routerProxy));
    }

    function testFillOrderProxy() public {
        deal(address(routerProxy), 30e18);

        routerProxy.fillOrderProxy(
            tokenAddress,
            tokenId,
            fillPrice,
            reservoirRouter,
            reservoirRouterData
        );
    }
}
